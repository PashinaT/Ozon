'use strict';
// checkbox

//let checkbox =document.getElementById('discount-checkbox');// —Ç–æ–∂–µ —Å–∞–º–æ–µ —á—Ç–æ –∏ —Å–Ω–∏–∑—É - —ç—Ç–æ—Ç –≤–∞—Ä–∏–∫ –ª—É—á—à–µ –ø–æ id –ø–æ–ª—É—á–∞—Ç—å
//(–¥–ª—è –æ–¥–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞ - –Ω–∏–∂–µ –ø–µ—Ä–µ–ø–∏—Å–∞–ª–∏ —á—Ç–æ–±—ã –¥–ª—è –∫–ª–∞—Å—Å–∞ –±—ã–ª–æ–æ - –ø–æ –∫–æ–º–∞–Ω–¥–µ –∏—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞)

 function toggleCgeckbox(){
     const checkbox =document.querySelectorAll('.filter-check_checkbox');
     checkbox.forEach(function(elem){
         elem.addEventListener('change', function(){
             if(this.checked){
                 this.nextElementSibling.classList.add('checked');
             } else {
                 this.nextElementSibling.classList.remove('checked');
             }
         });
     });
 }



// 1 —Å–ø–æ—Å–æ–±
//let checkbox = document.querySelector('#discount-checkbox'); –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –ø–æ id(–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—à—ë—Ç–∫—É)
//checkbox.onchange=function(){ –µ—Å–ª–∏ –Ω–∞–≤–µ—Å—Ç–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç - –Ω–æ —Å–ø–æ—Å–æ–± —Å–∫–∞–∑–∞–ª–∏ —É—Å—Ç–∞—Ä–µ–ª, –Ω–µ–ª—å–∑—è –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–≤–µ—Å–∏—Ç—å –Ω–∞–ø—Ä–∏–º–µ—Ä
 //   console.log('–≥–∞–ª–æ—á–∫–∞');
//};

//2 —Å–ø–æ—Å–æ–±(–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –º–Ω–æ–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –ø–µ—Ä–µ–ø–∏—à–µ–º —Å —Ü–∏–∫–ª–æ–º)
// checkbox.addEventListener('change',function(){
//     if(this.checked === true) //–≤–∑—è–æ–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ checked —É checkbox
//     {
//
//        this.nextElementSibling.classList.add('checked'); // –±–µ—Ä—ë—Ç —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç -–Ω–∏–∂–µ –Ω–∞—à–µ–≥–æ checkbox , classList
//         // - –¥–∞—Å—Ç –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤
//     } else{
//         this.nextElementSibling.classList.remove('checked'); // —É–±—Ä–∞–ª–∏ –≥–∞–ª–æ—á–∫—É
//     }
//                                             });



// —Å–ø–æ—Å–æ–± 1 –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –≤—ã–≤–æ–¥–∞ –≥–∞–ª–æ—á–µ–∫
// for(let i = 0;i < checkbox.length;i++){
//
//     checkbox[i].addEventListener('change', function(){
//         if(this.checked === true){
//             this.nextElementSibling.classList.add('checked');
//         } else{
//             this.nextElementSibling.classList.remove('checked');
//         }
//     });
// }


//3 —Å–ø–æ—Å–æ–± - —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è - –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º this  - —Ç–æ –≤—Å—ë –ø–æ–ª–µ—Ç–∏—Ç
//checkbox.addEventListener('change',()=>{
//    console.log('u');
//});

//end checkbox

// –∫–æ—Ä–∑–∏–Ω–∞
function toggleCart(){
    const btnCart = document.getElementById('cart');
    const modalCart = document.querySelector('.cart');
    const closeBtn = document.querySelector('.cart-close');

    btnCart.addEventListener('click', ()=>{
        modalCart.style.display ='flex';// –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±–ª–æ–∫ –∫–æ—Ä–∑–∏–Ω—ã
        document.body.style.overflow = 'hidden';
        //modalCart.style.cssText='display: flex; font-size: 30px'; // —á—Ç–æ–±—ã –º–Ω–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤ –ø—Ä–∏–º–µ–Ω—è—Ç—å

    });

    closeBtn.addEventListener('click', ()=>{
        modalCart.style.display ='none';// –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –±–ª–æ–∫ –∫–æ—Ä–∑–∏–Ω—ã
        document.body.style.overflow = '';

    });
}


// –∫–æ–Ω–µ—Ü –∫–æ—Ä–∑–∏–Ω—ã
// —Ä–∞–±–æ—Ç–∞ —Å —Ç–æ–≤–∞—Ä–æ–º
function addCart(){
    const cartWrapper = document.querySelector('.cart-wrapper');
    const cartEmpty = document.getElementById('cart-empty');
    const count = document.querySelector('.counter');
    const cards = document.querySelectorAll('.goods .card'); // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –æ–±—ë—Ä—Ç–∫–µ goods


    cards.forEach((card)=>{
        const btn = card.querySelector('button');
        btn.addEventListener('click', ()=>{
            const cardClone = card.cloneNode(true);// –µ—Å–ª–∏ true –≤—Å—ë –≤–Ω—É—Ç—Ä–∏ —Å–∫–æ–ø–∏—Ä—É–µ—Ç
            cartWrapper.appendChild(cardClone);
            //cartEmpty.remove();// —É–±—Ä–∞–ª–∏(–Ω–µ —É–¥–∞–ª–∏–ª–∏!!) –Ω–∞–¥–ø–∏—Å—å —á—Ç–æ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ - –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º
            showData();

            const removeBtn = cardClone.querySelector('.btn');
            removeBtn.textContent='–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã';
            removeBtn.addEventListener('click', ()=> {
                cardClone.remove();
                showData();
            });
        });
    });

    function showData() {
        const cardsCart = cartWrapper.querySelectorAll('.card');
        const cardPrice = cartWrapper.querySelectorAll('.card-price');// —Ü–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        const cardTotal=document.querySelector('.cart-total span');
        count.textContent = cardsCart.length;// —Ç–µ–∫—Å—Ç –ø–æ–º–µ–Ω—è–ª–∏ - –±—ã—Å—Ç—Ä–µ–µ —á–µ–º html
        let sum = 0;
        cardPrice.forEach((elem)=>{

            let price = parseFloat(elem.textContent); // —É—Ä–µ–∑–∞–µ–º –µ—Å–ª–∏ —Å—Ä–∞–∑—É —É–≤–∏–¥–µ–º –Ω–µ —á–∏—Å–ª–æ
            sum += price;
        });

        cardTotal.textContent = sum;

        if(cardsCart.length !== 0){
            cartEmpty.remove();
        } else{
            cartWrapper.appendChild(cartEmpty); // –≤ –æ–±–æ–ª–æ—á–∫—É cartWrapper –≤—Å—Ç–∞–≤–∏–ª–∏ - —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ –∫–Ω–æ–ø–∫—É
        }
    }
}


// end —Ä–∞–±–æ—Ç—ã

// —Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–∏ - —Å–∫–∞–∑–∞–ª–∏ –Ω–µ —Å–∞–º—ã–π –ª—É—á—à–∏–π —Å–ø–æ—Å–æ–±

function actionPage(){
    const cards = document.querySelectorAll('.goods .card');
    const discountCheckbox = document.getElementById('discount-checkbox');
    const min = document.getElementById('min');
    const max = document.getElementById('max');
    const goods = document.querySelector('.goods');
    const search = document.querySelector('.search-wrapper_input');
    const searchBtn =  document.querySelector('.search-btn');

    // –µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ü–∏—è
    discountCheckbox.addEventListener('click',filter);

    // –µ—Å–ª–∏ –≤–≤–µ–ª–∏ —Ü–µ–Ω—É

    min.addEventListener('change',filter); //  —Å–∫–æ–±–æ—á–∫–∏ –ø–∏—Å–∞—Ç—å –Ω–µ –Ω–∞–¥–æ - –∏–Ω–∞—á–µ —Å—Ä–∞–∑—É –≤—ã–∑–æ–≤–µ—Ç
    max.addEventListener('change',filter);

    // –ø–æ–∏—Å–∫ –≤ —Å—Ç—Ä–æ–∫–µ
    searchBtn.addEventListener('click', ()=> {
        const searchText = new RegExp(search.value.trim(),'i'); // –ø–æ–ª—É—á–∞–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
        // trim - –æ–±—Ä–µ–∑–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã, i - —Å –Ω–∏–º –Ω–µ –≤–∞–∂–µ–Ω —Ä–µ–≥–∏—Å—Ç—Ä
        cards.forEach((card)=>{
            const title = card.querySelector('.card-title');
            if(!searchText.test(title.textContent)){
                card.parentNode.remove();
            } else{
                goods.appendChild(card.parentNode);
            }
        });
        search.value='';


    });

    //ab
    function filter(){
        cards.forEach((card)=>{
            const cardPrice = card.querySelector('.card-price');
            const price = parseFloat(cardPrice.textContent);
            const discount= card.querySelector('.card-sale');

            if((min.value && price < min.value) || (max.value && price > max.value)) {
                card.parentNode.remove();
            } else if(discountCheckbox.checked && !discount){
                card.parentNode.remove();
            } else{
                goods.appendChild(card.parentNode);
            }

            });

    }
}




//–∫–æ–Ω–µ—Ü —Ñ–∏–ª—å—Ç—Ä–∞

//–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
function getData(){
    const goodsWrapper =  document.querySelector(('.goods'));
    //API - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–∞–∫ get –∑–∞–ø—Ä–æ—Å
    return fetch('../db/db.json').then((response)=>{ //–ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ then –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é
        if(response.ok){
            return response.json();
        } else {
            throw new Error(response.status); // –≤—ã–∫–∏–Ω—É–ª–∏ –æ—à–∏–±–∫—É —Å –∫–æ–¥–æ–º —Å—Ç–∞—Ç—É—Å–∞
        }

    }).then((data) =>{
        return data;
    })
        .catch((err)=>{
            console.warn(err);
            goodsWrapper.innerHTML = '<div style="color: red; font-size:30px">–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!</div>'; //–∑–∞–º–µ–Ω–∏–ª–∏ –Ω–∞ —Ç–µ–∫—Å—Ç
        });
}
//–≤—ã–≤–æ–¥ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞
function renderCards(data){
    const goodsWrapper= document.querySelector('.goods');
    data.goods.forEach((good)=>{
        const card = document.createElement('div');// —Å–æ–∑–¥–∞–ª–∏ –∫–∞—Ä—Ç–æ—á–∫—É
       card.className='col-12 col-md-6 col-lg-4 col-xl-3'
        card.innerHTML=`
        
                <div class="card" data-category="${good.category}">
                ${good.sale ? '<div class="card-sale">üî•Hot Saleüî•</div>':''} <!--—É—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä-->
                   <div class="card-img-wrapper">
                        <span class="card-img-top"
                      style="background-image: url('${good.img}')"></span>
                   </div>
                   <div class="card-body justify-content-between">
                        <div class="card-price" style="${good.sale ? 'color:red':''}">${good.price} ‚ÇΩ</div>
                        <h5 class="card-title">${good.title}</h5>
                        <button class="btn btn-primary">–í –∫–æ—Ä–∑–∏–Ω—É</button>
                   </div>
                </div>

        `;
        goodsWrapper.appendChild(card);// –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    });

}
// end –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞


function renderCatalog(){
     const cards = document.querySelectorAll('.goods .card');
     const categories = new Set();
     const catalogWrapper = document.querySelector('.catalog');
     const catalogBtn = document.querySelector('.catalog-button');
     const catalogList = document.querySelector('.catalog-list');
     cards.forEach((card)=>{
         categories.add(card.dataset.category);
     });


     categories.forEach((item)=>{
         const li = document.createElement('li');
         li.textContent=item;
         catalogList.appendChild(li);
     });

     console.log(categories);

     catalogBtn.addEventListener('click',(event)=>{
        if(catalogWrapper.style.display){
            catalogWrapper.style.display='';
             } else{
            catalogWrapper.style.display='block';
        }
        if(event.target.tagName ==='LI'){
            cards.forEach((card)=>{
               if(card.dataset.category === event.target.textContent) {
                   card.parentNode.style.display="";
               }else{
                   card.parentNode.style.display="none";
               }
            });
        }
        });
}






// —Å–¥–µ–ª–∞–ª–∏ —Ç–∞–∫, —á—Ç–æ–±—ã —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–ª–∏—Å—å –∫–∞—Ä—Ç—ã –∞ —Ç–æ–ª—å–∫–æ –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º–∏
getData().then((data)=>{
    renderCards(data);
    toggleCart();
    toggleCgeckbox();
    actionPage();
    addCart();
    renderCatalog();
});



